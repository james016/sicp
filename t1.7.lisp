(define (square x) (* x x))
(define (sqrt-iter guess x)
  (if (good-enough? guess (improve guess x))
    guess
    (sqrt-iter (improve guess x)
	       x)))
(define (improve guess x)
  (average guess (/ x guess)))
(define (average x y)
  (/ (+ x y) 2))
(define (good-enough? guess improve_guess)
  (< (/ (abs (- guess improve_guess)) (abs guess)) 0.0001))
(define (sqrt x) (sqrt-iter 1.0 x))

(square (sqrt 0.00000000001))
